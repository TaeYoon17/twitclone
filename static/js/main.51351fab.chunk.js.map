{"version":3,"sources":["fbase.js","routes/Auth.js","components/Twit.js","components/TwitList.js","components/TwitFactory.js","routes/Home.js","components/ProfileForm.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","password","form","setForm","newAccount","setNewAccount","error","setError","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","message","onChange","target","name","value","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","log","type","placeholder","required","onClick","prev","Twit","twitObj","isOwner","userObj","text","twit","setTwit","toggle","setToggle","newImg","setNewImg","onDelete","conFirm","window","confirm","doc","id","delete","attatchmentURL","refFromURL","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","update","accept","theFile","files","undefined","reader","FileReader","onload","finishedE","result","currentTarget","readAsDataURL","alt","src","width","height","TwitList","twits","map","creatorId","createdAt","TwitFactory","attatchment","setAttatchment","nTwit","Date","now","collection","add","maxLength","Home","setTwits","useEffect","onSnapshot","snapshot","tiwtArray","docs","ProfileForm","refreshUser","displayName","setName","updateProfile","placehlder","Profile","myTwits","setMyTwits","history","useHistory","where","orderBy","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","setIsLoggedIn","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","getUTCDate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51351fab.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance=firebase;\r\nexport const authService= firebase.auth();\r\nexport const dbService=firebase.firestore();\r\nexport const storageService=firebase.storage();","import React,{useState} from \"react\";\r\nimport {authService,firebaseInstance} from \"fbase\";\r\nconst Auth=()=>{\r\n    const [form,setForm]=useState({\r\n        email:\"\",\r\n        password:\"\"\r\n    });\r\n    const [newAccount,setNewAccount]=useState(true);\r\n    const [error,setError]=useState(\"\");\r\n    const {email,password}=form;\r\n    const onSubmit=async(e)=>{\r\n        e.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount) data=await authService.createUserWithEmailAndPassword(email,password);\r\n            else data=await authService.signInWithEmailAndPassword(email,password);\r\n        }catch(error){\r\n            console.error(error.message);\r\n            setError(error.message);\r\n        }\r\n    }\r\n    const onChange=e=>{\r\n        const {target:{name,value}}=e;\r\n        setForm({\r\n            ...form,\r\n            [name]:value\r\n        })\r\n    }\r\n    const toggleAccount=()=>setNewAccount(prev=>!prev);\r\n    const onSocialClick=async e=>{\r\n        const name=e.target.name;\r\n        let provider;\r\n        if(name===\"google\") provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        else if(name===\"github\") provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        const data=await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n    return(\r\n    <>\r\n    <form onSubmit={onSubmit}>\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required onChange={onChange} value={email}/>\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={onChange}required value={password}/>\r\n        <input type=\"submit\" value={newAccount ? \"Register\":\"LogIn\"}/>\r\n    </form>\r\n    <span onClick={toggleAccount}>{newAccount ?\"LogIn\" : \"Register\"}</span>\r\n    <span>{error}</span>\r\n    <br/>\r\n    <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n    <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n    </>\r\n)\r\n}\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React,{useState} from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\"; \r\nconst Twit=({twitObj, isOwner,userObj})=>{\r\n    const [twit,setTwit]=useState(twitObj.text);\r\n    const [toggle,setToggle]=useState(false);\r\n    const [newImg,setNewImg]=useState(null);\r\n    const onDelete=async ()=>{\r\n        const conFirm=window.confirm(\"You want to Delete??\");\r\n        conFirm && await dbService.doc(`/twit/${twitObj.id}`).delete();\r\n        conFirm && twitObj.attatchmentURL &&\r\n        await storageService.refFromURL(twitObj.attatchmentURL).delete();\r\n    }\r\n    const onUpdate=()=>setToggle(prev=>!prev);\r\n    const onChange=e=>setTwit(e.target.value);\r\n    const onCancel=()=> setToggle(!toggle);\r\n    const onSubmit=async e=>{\r\n        e.preventDefault();\r\n        let attatchmentURL=null;\r\n        if(newImg!==null){\r\n            const fileRef= twitObj.attatchmentURL===null ? storageService.ref().child(`${userObj.uid}/${uuidv4()}`) :\r\n            storageService.refFromURL(twitObj.attatchmentURL);\r\n            const response=await fileRef.putString(newImg,\"data_url\");\r\n            attatchmentURL=await response.ref.getDownloadURL();\r\n        }else{\r\n            twitObj.attatchmentURL && await storageService.refFromURL(twitObj.attatchmentURL).delete();\r\n        }\r\n        await dbService.doc(`/twit/${twitObj.id}`).update({\r\n            text:twit,\r\n            attatchmentURL\r\n        });\r\n        setToggle(prev=>!prev);\r\n    }\r\n    const onFileChange=e=>{\r\n        const {target:{files}}=e;\r\n        const theFile=files[0];\r\n        if(theFile===undefined) setNewImg(null);\r\n        else{\r\n            const reader=new FileReader();\r\n            reader.onload=finishedE=>{\r\n                const {currentTarget:{result}}=finishedE;\r\n                setNewImg(result);\r\n            };\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    }\r\n    const onClearPhoto=()=>setNewImg(null);\r\n    return(\r\n    <div key={twitObj.id}>\r\n    {toggle ? \r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input type=\"text\" placeholder={twit} onChange={onChange} value={twit}/>\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n            {newImg!==null&&    \r\n                    <div>\r\n                        <img alt=\"Img\" src={newImg} width=\"50px\" height=\"50px\"/>\r\n                        <button onClick={onClearPhoto}>ClearPhoto</button>\r\n                    </div>\r\n            }\r\n            <input type=\"submit\" value=\"ReTwit\"/>\r\n            <button onClick={onCancel}>Cancel</button>\r\n\r\n        </form>\r\n        </>\r\n        :\r\n        <>\r\n            <h4>{twitObj.text}</h4>\r\n            {twitObj.attatchmentURL && <img alt=\"twitObj\"src={twitObj.attatchmentURL} width=\"50px\" height=\"50px\"/>}\r\n        {isOwner &&\r\n            <>\r\n            <button onClick={onUpdate}>Edit</button>\r\n            <button onClick={onDelete}>Delete</button>\r\n            </>\r\n        }\r\n        </>\r\n    }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Twit;","import React from \"react\";\r\nimport Twit from \"components/Twit\";\r\nconst TwitList=({twits,userObj})=>{\r\n    console.log(twits);\r\n    return(\r\n        <div>\r\n            {twits.map(twit=>\r\n            <Twit\r\n                key={twit.createdAt}\r\n                twitObj={twit}\r\n                isOwner={twit.creatorId===userObj.uid}\r\n                userObj={userObj}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TwitList;","import React,{useState} from \"react\";\r\nimport {dbService, storageService} from \"fbase\";\r\nimport {v4 as uuidv4} from \"uuid\"; \r\nconst TwitFactory=({userObj, twitObj})=>{\r\n    const [twit,setTwit]=useState(\"\");\r\n    const [attatchment,setAttatchment]=useState(null);\r\n    const onSubmit=async e=>{\r\n        e.preventDefault();\r\n        let attatchmentURL=null;\r\n        if(attatchment===null && twit===\"\") return;\r\n        else{\r\n            if(attatchment!==null){\r\n                const fileRef=storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n                const response=await fileRef.putString(attatchment,\"data_url\");\r\n                attatchmentURL=await response.ref.getDownloadURL();\r\n            }\r\n            const nTwit={\r\n                text: twit,\r\n                createdAt: Date.now(),\r\n                creatorId:userObj.uid,\r\n                attatchmentURL\r\n            }\r\n            if(twitObj===null) await dbService.doc(`/twit/${twitObj.id}`).update({\r\n                text:twit,\r\n                attatchmentURL\r\n            });\r\n            else await dbService.collection(\"twit\").add(nTwit);\r\n            setTwit(\"\");\r\n            setAttatchment(null);\r\n        }\r\n    }\r\n    const onChange=e=>{\r\n        const{target:{value}}=e;\r\n        setTwit(value);\r\n    }\r\n    const onFileChange=e=>{\r\n        const {target:{files}}=e;\r\n        const theFile=files[0];\r\n        if(theFile===undefined) setAttatchment(null);\r\n        else{\r\n            const reader=new FileReader();\r\n            reader.onload=finishedE=>{\r\n                const {currentTarget:{result}}=finishedE;\r\n                setAttatchment(result);\r\n            };\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    }\r\n    const onClearPhoto=()=>{\r\n        setAttatchment(null);\r\n    }\r\n    return(\r\n    <form onSubmit={onSubmit}>\r\n    <input type=\"text\" onChange={onChange} placeholder=\"What's on your mind?\" maxLength={120} value={twit}/>\r\n    <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n    <input type=\"submit\" value=\"Post\"/>\r\n    {attatchment!==null&&\r\n        <div>\r\n            <img alt=\"Img\" src={attatchment} width=\"50px\" height=\"50px\"/>\r\n            <button onClick={onClearPhoto}>Cancel</button>\r\n        </div>\r\n    }\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default TwitFactory;","import React,{useEffect, useState} from \"react\";\r\nimport TwitList from \"components/TwitList\";\r\nimport {dbService} from \"fbase\";\r\nimport TwitFactory from \"components/TwitFactory\";\r\nconst Home=({userObj})=>{\r\n    const [twits,setTwits]=useState([]);\r\n    useEffect(()=>{\r\n        dbService.collection(\"twit\")\r\n        .onSnapshot(snapshot=>{\r\n            const tiwtArray=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));\r\n            setTwits(tiwtArray);\r\n        });\r\n    },[]);\r\n    return(\r\n        <>\r\n            <div>\r\n                <TwitFactory userObj={userObj}/>\r\n            </div>\r\n            <div>\r\n                <TwitList userObj={userObj} twits={twits}/>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\nexport default Home;\r\n","import React,{useState} from \"react\";\r\nconst ProfileForm=({userObj,refreshUser})=>{\r\n    const [name,setName]=useState(userObj.displayName);\r\n    const onSubmit=async e=>{\r\n        e.preventDefault();\r\n        if(userObj.displayName!==name){\r\n            await userObj.updateProfile({\r\n                displayName:name\r\n            });\r\n            refreshUser();\r\n        }\r\n        setName(\"\");\r\n    }\r\n    const onChange=(e)=>{\r\n        const {target:{value}}=e;\r\n        setName(value);\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" placehlder=\"Enter the change name\"\r\n                onChange={onChange} value={name}/>\r\n                <input type=\"submit\" value=\"Change\"/>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileForm;","import React, {  useEffect,useState } from \"react\";\r\nimport { authService,dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProfileForm from \"components/ProfileForm\";\r\nimport TwitList from \"components/TwitList\";\r\nconst Profile=({userObj,refreshUser})=>{\r\n    const [myTwits,setMyTwits]=useState([]);\r\n    const history=useHistory();\r\n    const onLogOutClick=()=>{\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    useEffect(()=>{\r\n        dbService\r\n        .collection(\"twit\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createdAt\")\r\n        .onSnapshot(snapshot=>{\r\n            const tiwtArray=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));\r\n            setMyTwits(tiwtArray);\r\n        });\r\n    },[userObj.uid]);\r\n    return(\r\n        <>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n        <ProfileForm userObj={userObj} refreshUser={refreshUser}/>\r\n        <TwitList userObj={userObj} twits={myTwits}/>\r\n        </>\r\n    )\r\n};\r\nexport default Profile;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nconst Navigation=({userObj})=>{\r\n    return(\r\n        <nav>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/profile\">{userObj.displayName}My Profile</Link>\r\n            </li>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\nconst AppRouter=({isLoggedIn,userObj,refreshUser})=>{\r\n    return(\r\n    <Router>\r\n        {isLoggedIn && <Navigation userObj={userObj}/>}\r\n        <Switch>\r\n            {isLoggedIn ?\r\n            <>\r\n            <Route exact path=\"/\">\r\n                <Home userObj={userObj}/>\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n            </Route>\r\n            </>\r\n            :\r\n            <Route exact path=\"/\">\r\n                <Auth/>\r\n            </Route>\r\n            }\r\n        </Switch>\r\n    </Router>\r\n    )};\r\nexport default AppRouter;","import React,{useEffect, useState} from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport {authService} from \"fbase\";\r\nconst App=()=>{\r\n  const [isLoggedIn,setIsLoggedIn]=useState(false);\r\n  const [init,setInit]=useState(false);\r\n  const [userObj,setUserObj]=useState(null);\r\n  useEffect(()=>{\r\n    authService.onAuthStateChanged(user=>{\r\n      if(user) {\r\n        setIsLoggedIn(true);\r\n        setUserObj({\r\n          displayName:user.displayName,\r\n          uid:user.uid,\r\n          updateProfile(args){\r\n            return user.updateProfile(args)\r\n          },\r\n        });\r\n      }\r\n      else setIsLoggedIn(false);\r\n      setInit(true);\r\n    });\r\n  },[]);\r\n  const refreshUser=()=>{\r\n    const user=authService.currentUser;\r\n    setUserObj({\r\n      displayName:user.displayName,\r\n      uid:user.uid,\r\n      updateProfile(args){\r\n        return user.updateProfile(args)\r\n      },\r\n    });\r\n  }\r\n  return(\r\n  <>\r\n    {init? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser}></AppRouter> :\"initializing...\"}\r\n    <footer>&copy {new Date().getUTCDate()}</footer>\r\n  </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}